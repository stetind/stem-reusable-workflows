name: Cloudflare_Deploy

on:
  workflow_call:
    secrets:
      NPM_TOKEN:
        required: true
      CF_API_TOKEN:
        required: true
    inputs:
      deploy_environment:
        description: 'Choose an environment to deploy to'
        required: true
        type: string
      debug:
        description: 'Enable debug?'
        required: false
        default: false
        type: boolean

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    environment: ${{ inputs.deploy_environment }}

    steps:
      - name: ðŸ›« Checkout
        uses: actions/checkout@v3

      - name: ðŸ§™ Install Node 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: ðŸ”§ Setup Npm
        run: npm config set //registry.npmjs.org/:_authToken ${{ secrets.NPM_TOKEN }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: ðŸ”§ Install Dependencies
        run: npm ci

      - name: ðŸ”§ Building Environment
        run: npm run build --if-present

      - name: ðŸ”§ Prepare wrangler environment variables
        run: |
          declare -A obj
          echo '${{ toJSON(secrets) }}' > ${{github.workspace}}/.secrets_json
          echo '${{ toJSON(vars) }}' > ${{github.workspace}}/.vars_json
          
          while read -r key value; do
            obj[$key]=$value
          done <<< $(jq -r 'to_entries[] | "\(.key) \(.value)"' ${{github.workspace}}/.secrets_json)
          
          while read -r key value; do
            obj[$key]=$value
          done <<< $(jq -r 'to_entries[] | "\(.key) \(.value)"' ${{github.workspace}}/.vars_json)
          
          filename="wrangler.template.temp"
          
          for var_name in $(egrep -ohi '(\$(((ENV|VARS)_[A-Z_0-9]+)|(ACCOUNT_ID)))' ${filename} | cut -c 2-)
          do
            pattern='$'${var_name}
            replacement=${obj[${var_name}]}
          
            escaped_pattern=$(echo "$pattern" | sed 's/[][\\/\\.^$*+?(){}|]/\\&/g')
            escaped_replacement=$(echo "$replacement" | sed 's/[][\\/\\.^$*+?(){}|]/\\&/g')
            sed_pattern="s/${escaped_pattern}/${escaped_replacement}/g"
          
            sed -i "$sed_pattern" ${filename}
          done

      - name: ðŸ”§ Create wrangler file
        run: cp wrangler.template.temp wrangler.toml

      - name: Prepare Secret Variables
        run: |
          declare -A obj
          while read -r key value; do
            obj[$key]=$value
          done <<< $(jq -r 'to_entries[] | "\(.key) \(.value)"' ${{github.workspace}}/.secrets_json)
          
          filename="wrangler.toml"
          for var_name in $(egrep -ohi '(\$SECRET_([A-Z_0-9]+))' ${filename} | cut -c 2-)
          do
            key=${var_name#"SECRET_"}
            secret_variables="${secret_variables}\n ${key}"
            echo "${key}=${obj[${key}]}" >> $GITHUB_ENV
            echo '${var_name} => '${var_name}
            echo '${key} => '${key}
            echo '${obj[${key}]} => '${obj[${key}]}
            echo '${secret_variables} => '${secret_variables}
          done
          
          if [[ -v secret_variables ]];
          then
            secret_variables='|'${secret_variables}
            echo "wrangler_secrets=${secret_variables}" >> $GITHUB_ENV
          else
            echo "wrangler_secrets=''" >> $GITHUB_ENV
          fi

      - name: ðŸ“¦ Publish app
        uses: cloudflare/wrangler-action@2.0.0
        with:
          preCommands: |
            echo '----'
            echo ${{ env.wrangler_secrets }}
            echo '----'
            echo -e ${{ env.wrangler_secrets }}
            echo '----'
          apiToken: ${{ secrets.CF_API_TOKEN }}
          environment: ${{ vars.env_environment }}
          secrets: ${{ env.wrangler_secrets }}