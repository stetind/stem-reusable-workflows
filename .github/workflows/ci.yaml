name: CI

on:
  workflow_call:
    inputs:
      runner:
        description: 'Choose a runner, only for PhpUnit tests'
        required: false
        default: self-hosted
        type: string
jobs:
  pint:
    name: Laravel Pint Linting
    runs-on: ${{ inputs.runner }}
    container: industrialists/php83-pcov:1.0.1
    steps:
      - name: ðŸ›« Checkout
        uses: actions/checkout@v4

      - name: ðŸ§™ Configure Composer & Install Dependencies
        run: composer config --auth github-oauth.github.com "${{ secrets.COMPOSER_ACCESS_TOKEN }}" && composer i

      - name: ðŸ”§  Run linter
        run: vendor/bin/pint -vv --config ruleset-pint.json --test

#  phpmd:
#    name: Php Mess Detector - Check
#    runs-on: ubuntu-latest
#    steps:
#      - name: ðŸ›« Checkout
#        uses: actions/checkout@v4
#
#      - name: ðŸ”¨ Setup php
#        uses: shivammathur/setup-php@v2
#        with:
#          php-version: 8.1
#          tools: phpmd
#
#      - name: ðŸ”§  Run Check
#        run: phpmd src text cleancode,codesize,controversial,design,unusedcode

  analyze:
    name: PHPStan
    runs-on: ${{ inputs.runner }}
    container: industrialists/php83-pcov:1.0.1
    steps:
      - name: ðŸ›« Checkout
        uses: actions/checkout@v4

      - name: ðŸ§™ Configure Composer & Install Dependencies
        run: composer config --auth github-oauth.github.com "${{ secrets.COMPOSER_ACCESS_TOKEN }}" && composer i

      - name: ðŸ”§ Run analyzer
        run: vendor/bin/phpstan analyse --memory-limit=1G -c ruleset-phpstan.neon --error-format=github -vvv

  arch-test:
    name: Architecture Test
    runs-on: ${{ inputs.runner }}
    container: industrialists/php83-pcov:1.0.1
    steps:
      - name: ðŸ›« Checkout
        uses: actions/checkout@v4

      - name: ðŸ§™ Configure Composer & Install Dependencies
        run: composer config --auth github-oauth.github.com "${{ secrets.COMPOSER_ACCESS_TOKEN }}" && composer i

      - name: ðŸš“ Run test
        run: |
          for CONF in deptrac.yaml deptrac-*.yaml; do
            test ! -f "$CONF" && continue || vendor/bin/deptrac --report-uncovered --fail-on-uncovered --config-file="$CONF";
          done

  security-check:
    name: Vulnerability Check
    runs-on: ${{ inputs.runner }}
    container: ubuntu:latest
    steps:
      - name: ðŸ›« Checkout
        uses: actions/checkout@v4

      - name: Cache the vulnerability database
        uses: actions/cache@v4
        id: cache-db
        with:
          path: ~/.symfony/cache
          key: db

      - name: ðŸ’© Run security check
        uses: symfonycorp/security-checker-action@v5
        with:
          disable-exit-code: 1

  test:
    name: ðŸ”¨ PHPUnit
    runs-on: ${{ inputs.runner }}
    container: industrialists/php83-pcov:1.0.1
    steps:
      - name: ðŸ›« Checkout
        uses: actions/checkout@v4

      - name: ðŸ§™ Configure Composer & Install Dependencies
        run: composer config --auth github-oauth.github.com "${{ secrets.COMPOSER_ACCESS_TOKEN }}" && composer i

      - name: Inject Environment Variables
        uses: stetind/stem-reusable-workflows/.github/composite/inject-variables@feat/gs/add-composite-action-to-inject-env-variables
        with:
          secrets-context: ${{ toJson(secrets) }}
          vars-context: ${{ toJson(vars) }}

      - name: ðŸ”§ Execute Unit Tests
        run: vendor/bin/testbench package:test --env=true --parallel --coverage --min=90 --configuration=phpunit.xml
        env:
          APP_URL: http://127.0.0.1:8001



#  document:
#    name: Update Documentation
#    runs-on: ubuntu-latest
#    steps:
#      - name: ðŸ“– Generate documentation
#        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }} #I will only run on the main branch and not on pull request
#        uses: convictional/trigger-workflow-and-wait@v1.6.1
#        with:
#          owner: stetind
#          repo: stem-documentation
#          github_token: ${{ secrets.COMPOSER_ACCESS_TOKEN }}
#          workflow_file_name: docs.yaml
#          wait_workflow: false
